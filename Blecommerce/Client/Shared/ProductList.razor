@inject IProductService ProductService
@implements IDisposable

@if (ProductService.products == null || ProductService.products.Count == 0)
{
    <span>@ProductService.Message</span>
}
else
{

    <MudGrid>

        @foreach (var product in ProductService.products)
        {
            var link = "/product/" + product.Id;

            <MudItem xs="12" sm="6" md="6" lg="3">
                <MudCard Class="d-flex flex-column relative overflow-hidden" Style="height:100%">
                    <MudImage ObjectFit="@ObjectFit.Cover" ObjectPosition="ObjectPosition.Top" Class="zoomed" Height="300" Src=@product.ImageUrl />
                    <MudCardContent>
                        <MudLink Href="@link" Typo="Typo.h5">@product.Title</MudLink>
                        <MudText Typo="Typo.body2">@product.Description</MudText>
                    </MudCardContent>
                    <MudCardActions Class="mt-auto">
                        <MudText Color="Color.Success" Typo="Typo.h6">@GetPriceText(product)</MudText>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
    <MudItem xs="12">
        <MudPagination Color="Color.Primary"
                   Rectangular="true"
                   Class="my-4"
                   Count="@ProductService.MetaData.TotalPages"
                   SelectedChanged="PageChanged" />
    </MudItem>

}

@code {
    protected override void OnInitialized()
    {
        ProductService.ProductsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ProductService.ProductsChanged -= StateHasChanged;
    }

    internal string GetPriceText(Product product)
    {
        var variants = product.Variants;
        if (variants.Count == 0)
        {
            return string.Empty;
        }
        else if (variants.Count == 1)
        {
            return $"${variants[0].Price}";
        }

        decimal price = variants.Min(v => v.Price);
        return $"Starting at ${price}";

    }

    private void PageChanged(int i)
    {
        ProductService.Paginate(i,false);
    }
}

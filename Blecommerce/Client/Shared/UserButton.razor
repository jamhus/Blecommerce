@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<MudMenu Variant="Variant.Outlined" Icon="@Icons.Filled.Person" Color="Color.Secondary">
    <AuthorizeView>
        <Authorized>
           <MudMenuItem Link="Profile">Profile</MudMenuItem>
           <MudMenuItem OnClick="Logout">Logout</MudMenuItem>
        </Authorized>

        <NotAuthorized>
            <MudMenuItem Link="/register">Register</MudMenuItem>
            <MudMenuItem OnClick="()=> NavLogin(NavigationManager.ToBaseRelativePath(NavigationManager.Uri))">
                Login
            </MudMenuItem>
        </NotAuthorized>
    </AuthorizeView>

</MudMenu>
@code {

    private void NavLogin (string url)
    {
        NavigationManager.NavigateTo($"login?returnUrl={url}");
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("/login");
    }
}

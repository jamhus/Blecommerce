@page "/product/{id:int}"
@inject IProductService ProductSerivce

@if (product == null)
{
    <span>@message</span>
}
else
{
    <MudPaper>
        <MudCard Class="d-flex flex-row">
            <MudImage ObjectPosition="@ObjectPosition.Center" Src=@product.ImageUrl Width="332" Height="250" Alt=@product.Title Elevation="25" Class="rounded-lg ma-4"/>
            <MudCardContent Class="d-flex flex-column" Style="width: 40%">
                <MudText Class="mb-5" Typo="Typo.h5">@product.Title</MudText>
                <MudText Typo="Typo.body2">@product.Description</MudText>
                <MudText Class="mt-auto" Color="Color.Success" Typo="Typo.h6">$@product.Price</MudText>
            </MudCardContent>
        </MudCard>
  </MudPaper>
}

@code {
    private Product? product = null;
    private string message = String.Empty;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading Product...";
        var result = await ProductSerivce.GetProduct(Id);

        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            product = result.Data;
        }
    }
}
